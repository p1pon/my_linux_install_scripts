#!/bin/bash

# Script d'installation de Debian 13 (Trixie) avec BTRFS, snapper et grub-btrfs
# À exécuter depuis une session live en tant que root
# shell script to install Debian 13 from the live session with french language,
# fr-latin9 keyboard, zram swap, BTRFS subvolumes for /, /.snapshots, /var, /temp, /opt, /home
# as in Spirallinux, snapshots managed by snapper and grub-btrfs managing snapshot entries in grub
# also installs GNOME and synaptic package manager
  

set -e  # Arrête le script en cas d'erreur

# Configuration de base
TARGET_DISK="/dev/sda"  # À adapter selon ton disque cible
HOSTNAME="debian-trixie"
USERNAME="pierre"
USER_FULLNAME="Pierre Richard"
KEYBOARD_LAYOUT="fr-latin9"
LANG="fr_FR.UTF-8"
TIMEZONE="Europe/Paris"
ROOT_PASSWORD="changer_mot_de_passe"  # À changer !
USER_PASSWORD="changer_mot_de_passe"  # À changer !

# Vérification que le script est exécuté en root
if [ "$(id -u)" -ne 0 ]; then
    echo "Ce script doit être exécuté en tant que root." >&2
    exit 1
fi

# Installation des paquets nécessaires dans la session live
apt-get update
apt-get install -y --no-install-recommends \
    gdisk btrfs-progs snapper grub-btrfs zram-tools

# Partitionnement du disque
echo "Partitionnement du disque $TARGET_DISK..."
sgdisk -Z "$TARGET_DISK"  # Efface toutes les partitions existantes
sgdisk -n 1:0:+512M -t 1:ef00 "$TARGET_DISK"  # Partition EFI
sgdisk -n 2:0:0 -t 2:8300 "$TARGET_DISK"      # Partition racine BTRFS

# Création des systèmes de fichiers
echo "Création des systèmes de fichiers..."
mkfs.vfat -F32 "${TARGET_DISK}1"  # Formatage de la partition EFI
mkfs.btrfs -L "DebianRoot" "${TARGET_DISK}2"  # Formatage de la partition racine

# Montage des partitions
echo "Montage des partitions..."
mount "${TARGET_DISK}2" /mnt
mkdir -p /mnt/boot/efi
mount "${TARGET_DISK}1" /mnt/boot/efi

# Création des sous-volumes BTRFS
echo "Création des sous-volumes BTRFS..."
btrfs subvolume create /mnt/@
btrfs subvolume create /mnt/@.snapshots
btrfs subvolume create /mnt/@var
btrfs subvolume create /mnt/@tmp
btrfs subvolume create /mnt/@opt
btrfs subvolume create /mnt/@home

# Démontage et remontage avec les sous-volumes
umount /mnt
mount -o compress=zstd,subvol=@ "${TARGET_DISK}2" /mnt
mkdir -p /mnt/{.snapshots,boot/efi,var,tmp,opt,home}
mount "${TARGET_DISK}1" /mnt/boot/efi
mount -o compress=zstd,subvol=@.snapshots "${TARGET_DISK}2" /mnt/.snapshots
mount -o compress=zstd,subvol=@var "${TARGET_DISK}2" /mnt/var
mount -o compress=zstd,subvol=@tmp "${TARGET_DISK}2" /mnt/tmp
mount -o compress=zstd,subvol=@opt "${TARGET_DISK}2" /mnt/opt
mount -o compress=zstd,subvol=@home "${TARGET_DISK}2" /mnt/home

# Installation du système de base
echo "Installation du système de base..."
debbootstrap trixie /mnt http://deb.debian.org/debian

# Configuration de base du système
echo "Configuration de base du système..."
echo "$HOSTNAME" > /mnt/etc/hostname
cat > /mnt/etc/hosts <<EOF
127.0.0.1   localhost
127.0.1.1   $HOSTNAME
EOF

# Configuration de la locale et du clavier
echo "Configuration de la locale et du clavier..."
cat > /mnt/etc/locale.gen <<EOF
fr_FR.UTF-8 UTF-8
fr_FR@euro ISO-8859-15
EOF
echo "LANG=$LANG" > /mnt/etc/default/locale
echo "KEYMAP=$KEYBOARD_LAYOUT" > /mnt/etc/vconsole.conf

# Montage des systèmes de fichiers virtuels
mount -t proc /proc /mnt/proc
mount -t sysfs /sys /mnt/sys
mount -B /dev /mnt/dev
mount -t devpts /dev/pts /mnt/dev/pts

# Configuration des dépôts (main, contrib, non-free, backports)
echo "Configuration des dépôts APT..."
cat > /mnt/etc/apt/sources.list <<EOF
deb http://deb.debian.org/debian trixie main contrib non-free
deb-src http://deb.debian.org/debian trixie main contrib non-free

deb http://deb.debian.org/debian trixie-updates main contrib non-free
deb-src http://deb.debian.org/debian trixie-updates main contrib non-free

deb http://deb.debian.org/debian trixie-backports main contrib non-free
deb-src http://deb.debian.org/debian trixie-backports main contrib non-free

deb http://security.debian.org/debian-security trixie-security main contrib non-free
deb-src http://security.debian.org/debian-security trixie-security main contrib non-free
EOF

# Installation du noyau, GRUB, GNOME, synaptic et outils
echo "Installation du noyau, GRUB, GNOME et synaptic..."
chroot /mnt /bin/bash -c "apt-get update"
chroot /mnt /bin/bash -c "apt-get install -y --no-install-recommends \
    linux-image-amd64 linux-headers-amd64 grub-efi-amd64 grub-btrfs \
    snapper zram-tools btrfs-progs locales dialog \
    task-gnome-desktop synaptic firmware-linux firmware-linux-nonfree"

# Configuration de GRUB pour BTRFS
echo "Configuration de GRUB pour BTRFS..."
cat > /mnt/etc/default/grub <<EOF
GRUB_DEFAULT=0
GRUB_TIMEOUT=5
GRUB_DISTRIBUTOR="Debian"
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
GRUB_CMDLINE_LINUX=""
GRUB_BTRFS_ROOT_SUBVOLUME="@"
GRUB_BTRFS_SNAPSHOTS_SUBVOLUME="@.snapshots"
EOF

# Installation de GRUB
chroot /mnt /bin/bash -c "grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Debian"
chroot /mnt /bin/bash -c "update-grub"

# Configuration de snapper
echo "Configuration de snapper..."
chroot /mnt /bin/bash -c "snapper -v --no-dbus create-config /"
chroot /mnt /bin/bash -c "btrfs subvolume set-default $(btrfs subvolume list / | grep '@$' | awk '{print $2}') /"

# Configuration de zram
echo "Configuration de zram..."
cat > /mnt/etc/default/zramswap <<EOF
ALGO=zstd
PERCENT=50
EOF

# Configuration du réseau
echo "Configuration du réseau..."
cat > /mnt/etc/network/interfaces <<EOF
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
EOF

# Création de l'utilisateur
echo "Création de l'utilisateur $USERNAME..."
chroot /mnt /bin/bash -c "useradd -m -c '$USER_FULLNAME' -G sudo $USERNAME"
echo "$USERNAME:$USER_PASSWORD" | chroot /mnt /bin/bash -c "chpasswd"
echo "root:$ROOT_PASSWORD" | chroot /mnt /bin/bash -c "chpasswd"

# Configuration de sudo
echo "Configuration de sudo..."
chroot /mnt /bin/bash -c "usermod -aG sudo $USERNAME"
chroot /mnt /bin/bash -c "echo '$USERNAME ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers"

# Génération des locales
chroot /mnt /bin/bash -c "locale-gen"
chroot /mnt /bin/bash -c "update-locale LANG=$LANG"

# Nettoyage
umount -R /mnt

echo "Installation terminée ! Redémarre ton système avec :"
echo "  reboot"
